{"version":3,"sources":["api/posts.js","components/PostsList/PostsList.jsx","components/Loader/Loader.jsx","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","PostsList","userId","selectedPostId","setSelectedPostId","setLoading","useState","posts","updatePosts","useEffect","fetch","then","response","json","user","data","filter","post","GetUserPosts","className","map","key","id","title","type","onClick","Loader","getPostComments","postId","comments","comment","NewCommentForm","setComments","name","setName","email","setEmail","body","setBody","onSubmit","event","preventDefault","url","action","method","JSON","stringify","addPostComment","placeholder","value","onChange","target","PostDetails","details","setDetails","hiddenComments","setHiddenComments","res","removeComment","commentId","removePostComment","length","addComment","commentvef","state","App","selectedUser","setUser","loading","setloading","loadingPosts","setloadingPosts","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b8fac00.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const GetUserPosts = userId => fetch(`${BASE_URL}/posts`)\n  .then(response => response.json())\n  .then(user => (userId === 0\n    ? user.data\n    : user.data.filter(post => post.userId === userId)));\n\nexport const GetPostDetails = postId => fetch(`${BASE_URL}/posts/${postId}`)\n  .then(response => response.json())\n  .then(res => res.data);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { GetUserPosts } from '../../api/posts';\nimport './PostsList.scss';\n\nexport const PostsList = ({\n  userId,\n  selectedPostId,\n  setSelectedPostId,\n  setLoading,\n}) => {\n  const [posts, updatePosts] = useState([]);\n\n  useEffect(() => {\n    GetUserPosts(userId)\n      .then(updatePosts);\n  }, [userId]);\n  // console.log(loading)\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            className=\"PostsList__item\"\n            key={post.id}\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]\n              </b>\n              Post text:\n              {' '}\n              {post.title}\n\n            </div>\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                selectedPostId === post.id\n                  ? setSelectedPostId(null)\n                  : setSelectedPostId(post.id);\n                setLoading(true);\n              }\n              }\n            >\n              {selectedPostId === post.id\n                ? 'Close'\n                : 'Open'\n              }\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n  setLoading: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getPostComments = postId => fetch(`${BASE_URL}/comments`)\n  .then(response => response.json())\n  .then(comments => (postId === null\n    ? comments.data\n    : comments.data.filter(comment => comment.postId === postId)));\n\nexport const removePostComment = (commentId) => {\n  const url = `${BASE_URL}/comments/${commentId}`;\n  const action = { method: 'DELETE' };\n\n  return fetch(url, action);\n};\n\nexport const addPostComment = (body, email, name, postId) => {\n  const url = `${BASE_URL}/comments`;\n  const action = {\n    method: 'POST',\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  };\n\n  return fetch(url, action);\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addPostComment, getPostComments } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ selectedPostId, setComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if (name && email && body) {\n      addPostComment(name, email, body, selectedPostId)\n        .then(() => getPostComments(selectedPostId))\n        .then(setComments);\n    }\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={onSubmit}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => setBody(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n  setComments: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getPostComments, removePostComment } from '../../api/comments';\nimport { GetPostDetails } from '../../api/posts';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [details, setDetails] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [hiddenComments, setHiddenComments] = useState(true);\n\n  useEffect(() => {\n    GetPostDetails(selectedPostId)\n      .then(setDetails);\n\n    getPostComments(selectedPostId)\n      .then(setComments);\n  }, [selectedPostId]);\n\n  const removeComment = (commentId) => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n    removePostComment(commentId);\n  };\n\n  const addComment = (commentvef) => {\n    setComments(state => [...state, commentvef]);\n  };\n\n  if (!details) {\n    return null;\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>{details.title}</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{details.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => setHiddenComments(!hiddenComments)}\n        >\n          {hiddenComments\n            ? `Hide ${comments.length} comments`\n            : `Show ${comments.length} comments`\n          }\n        </button>\n\n        {hiddenComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li\n                className=\"PostDetails__list-item\"\n                key={comment.id}\n              >\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => removeComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n\n            <li className=\"PostDetails__list-item\">\n              <button\n                type=\"button\"\n                className=\"PostDetails__remove-button button\"\n              >\n                X\n              </button>\n            </li>\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            selectedPostId={selectedPostId}\n            setComments={setComments}\n            addComment={addComment}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { Loader } from './components/Loader/Loader';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [selectedUser, setUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(null);\n  const [loading, setloading] = useState(false);\n  const [loadingPosts, setloadingPosts] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => setloading(false), 1000);\n    setTimeout(() => setloadingPosts(false), 1000);\n  }, [loading, loadingPosts]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUser}\n            onChange={(event) => {\n              setUser(+event.target.value);\n              setloadingPosts(true);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {loadingPosts\n            ? <Loader />\n            : (\n              <PostsList\n                loading={loading}\n                setLoading={setloading}\n                userId={selectedUser}\n                selectedPostId={selectedPostId}\n                setSelectedPostId={setSelectedPostId}\n              />\n            )\n          }\n\n        </div>\n        <div className=\"App__content\">\n          {loading\n            ? <Loader />\n            : <PostDetails selectedPostId={selectedPostId} />\n          }\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}